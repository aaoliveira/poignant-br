

        h3. Pré-eventualismo numa Caixinha Dourada


        Você já aprendeu o bastante sobre @OpenURI@ e @yield@ para escrever os seus próprios
        iteradores. Você já sabe como usar o serviço de achados e perdidos. Na verdade, você já
        pode começar a se aventurar nos achados e perdidos de Wixl sem mim.

        Vamos _encapsular_ elegantemente todo o serviço em uma única classe.

        
        <pre>
         require 'open-uri'
         module PreEventualista
           def self.open page, query
             qs = 
               query.map do |k, v|
                 URI.escape "#{ k }=#{ v }"
               end.join "&"
             URI.parse( "http://preeventualist.org/lost/" + page + "?" + qs ).open do |lost|
               lost.read.split( "--\n" )
             end
           end
           def self.search word
             open "search", "q" => word
           end
           def self.searchlost word
             open "searchlost", "q" => word
           end
           def self.searchfound word
             open "searchfound", "q" => word
           end
           def self.addfound seu_nome, item_perdido, achado_em, descricao
             open "addfound", "name" => seu_nome, "item" => item_perdido, 
                              "at" => achado_em, "desc" => descricao
           end
           def self.addlost seu_nome, item_achado, visto_em, descricao
             open "addlost", "name" => seu_nome, "item" => item_achado,
                             "seen" => visto_em, "desc" => descricao
           end
         end
        </pre>


        Em algum momento, você tem que começar a modelar seu código em algo mais elegante. Salve o
        módulo acima em um arquivo chamado @preeventualista.rb@.


        Esse módulo é uma biblioteca muito simples para usar o serviço dos Pré-eventualistas. É exatamente
        assim que bibliotecas são escritas. Você constrói um módulo ou uma classe, grava em um arquivo, e,
        se ficou feliz com o resultado, disponibiliza na web para o resto do mundo poder utilizar.


        Esses vagabundos podem então usar o seu módulo da mesma forma que eu usei @OpenURI@ anteriormente.


        <pre>
         irb> require 'preeventualista'
         irb> puts PreEventualist.search( 'caminhao' )
         irb> puts PreEventualist.addfound( 'Why', 'conhecimentos em Ruby', 'Parque Wixl',
                "Eu posso lhe dar conhecimentos em Ruby!\nVenha visitar poignantguide.net!" )
        </pre>


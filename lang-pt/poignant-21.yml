    - Um Exemplo Para Te Ajudar a Crescer: >

        !i/the.foxes-7.png(Gettin' cabin fever.)!


        *Diga em voz alta cada uma das partes da conversa usadas abaixo.*


        <pre>
         require 'net/http'
         Net::HTTP.start( 'www.ruby-lang.org', 80 ) do |http|
             print( http.get( '/en/LICENSE.txt' ).body )
         end
        </pre>


        A primeira linha chama um método. O _método_ chamado @require@ é usado.  Uma _string_ é passada ao
        método contendo @'net/http'@.  Pense nesta primeira linha de código como uma sentença.  Nós dissemos
        ao Ruby para carregar um código auxiliar, a biblioteca @Net::HTTP.@


        As próximas três linhas vão todas juntas.  A _constante_ @Net::HTTP@ refere à biblioteca que carregamos acima.
        Nós estamos usando o _método_ @start@ da biblioteca.  Dentro do método, estamos enviando uma _string_
        @'www.ruby-lang.org'@ e o _número_ @80@.


        A palvra @do@ abre um _block_.  O block tem _uma váriavel de bloco_ @http@.  Dentro do block, o _método_
        @print@ é chamado.  O que está sendo imprimido?


        A partir da _variável_ @http@, o _método_ @get@ é chamado.  Dentro do @get@, nós passamos uma _string_ contendo
        o caminho @'/en/LICENSE.txt'@.  Agora, repare que outro método está ligado no @get@.  O _método_
        @body (corpo)@.  Então, o bloco se fecha com @end@.


        Tá indo bem?  Só por curiosidade, você consegue advinhar o que este exemplo faz?  Espero eu, que você já esteja 
        vendo alguns padrões no Ruby.  Se não, balance sua cabeça vigorosamente enquanto você põe estes exemplos
        na sua mente.  O código deve se quebrar em pedaços gerenciáveis.


        Por exemplo, este padrão é usando um monte de vezes:


        bq. _variavel_ . _metodo_ ( _argumentos do metodo_ )


        Você vê isso dentro do:


        bq. @http.get( '/en/LICENSE.txt' )@


        Estamos usando o Ruby para pegar uma página da web.  Você provavelmente já usou HTTP com o seu navegador.  HTTP é
        o Hypertext Transfer Protocol.  HTTP é usado para se transferir páginas pela internet.  Conceitualize
        um motorista de ônibus que pode dirigir por toda a internet e trazer de volta páginas pra gente.  No quepe dele
        estão estampadas as letras HTTP.


        A variável @http@ é aquele motorista.  O _método_ é uma mensagem para o motorista.  Vá @get (pegar)@
        a página da web chamada @/en/LICENSE.txt@.


        Então quando você vê esta cadeia de métodos:


        bq. @http.get( '/en/LICENSE.txt' ).body@


        Já que estaremos recebendo a página de volta pelo motorista @http@, você pode ler isto na sua cabeça
        assim:


        bq. _página web_ .body


        E neste pedaço de código:


        bq. @print( http.get( '/en/LICENSE.txt' ).body )@


        Este código pega a página.  Nós mandamos uma mensagem: @body@ para a página, que por sua vez nos dá
        HTML em uma _string_.  Nós então @imprimimos@ esta string.  Veja como o básico padrão ponto-método acontece
        em cadeia.  No próximo capítulo vamos explorar todos estes tipos de padrões no Ruby.  Vai ser boa diversão.


        Então, o que este código faz?  Ele imprime o HTML da página web do Ruby na tela.  Usando 
        um motorista de ônibus habilitado pra web.



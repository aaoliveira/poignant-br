                                                           - perry
        </pre>


        Acho que o Youth Study Clan está fazendo um ótimo trabalho com esse serviço. Está meio piegas e
        meio basicão, mas se conseguir fazer os animais pararem de usar seus meios mais instintivos de
        demarcar território, então eu tiro meu chapéu.


        Mesmo assim, um grupo de jovens preeventualistas? Como é que pode? Você tem que ter pelo menos
        _flertado com cinismo de verdade_ antes de poder se tornar um preeventualista. E definitivamente,
        não pode ir ao colégio. Portanto, eu não sei.


        Voltando à lista de instruções do Registro de Achados e Perdidos Preenventualista.


        <pre class="text">
         USANDO O SERVIDOR A&P
         =====================

         O A&P é um serviço gratuito. Os atos de perder e achar são qualidades essenciais para
         a construção de um estilo de vida preeventualista. Esperamos atender a sua crença.


         Não usamos HTML, para simplificar as coisa por aqui. Nosso pessoal já trabalha quinze
         horas por dia. (Valeu, Terk!! Valeu, Horace!!)


         Você pode usar nosso serviço para procurar coisas que você perdeu. Ou pode adicionar
         coisas que você perdeu (ou achou) ao nosso registro. Isso é feito digitando o endereço
         correspondente no seu browser.

         PESQUISANDO
         ===========
         Para procurar coisas perdidas, use o seguinte endereço:

           http://preeventualist.org/lost/search?q={palavra chave}

         Você pode substituir {palavra chave} pela sua pesquisa. Por exemplo, para pesquisar por "xícara"

           http://preeventualist.org/lost/search?q=xicara

         Assim, você receberá uma lista das xícaras que foram achadas ou perdidas.

         Se você quer pesquisar somente por xícaras perdidas ou somente por xícaras achadas, use as
         páginas 'searchlost' e 'searchfounds':

           http://preeventualist.org/lost/searchlost?q=xicara
        </pre>


        Não estou de brincadeira. Eu sei onde está o caminhão. Sério, não estou só provocando. Vou
        mostrar em um segundo. Só estou dizendo, olhe as raposas:


        !i/wixl-11.gif(Hummmmm.)!


        Elas estão indefesas. E mesmo assim, aqui está essa ótima ferramenta. Possivelmente, a chave
        para sair dessa confusão. Só quero dar uma fuçada, ver se há alguma pista por aqui.


        <pre>
         require 'open-uri'
         
         # Pesquisar todos os itens achados contendo a palavra 'caminhão'.
         open( "http://preeventualist.org/lost/searchfound?q=caminhao" ) do |truck|
           puts truck.read
         end
        </pre>


        Não vejo nada sobre o caminhão da raposa grande nessa lista. Tudo bem.
        As raposas estão perdidas mesmo. Temos algum tempo.


        Você aprendeu uma técnica simples para recuperar uma página da Internet. O código usa
        a biblioteca  @OpenURI@, que foi escrita por um dos meus rubistas preferidos, Akira Tanaka.
        Ele simplificou a leitura de arquivos Internet, tornado-a igual leitura de arquivos do seu computador.


        Num capítulo anterior, armazenamos suas idéias diabólicas em um arquivo texto. Você lê esses
        arquivos em Ruby usando @open@.


        <pre>
         require 'open-uri'
 
         # Abrindo um arquivo em um diretório do seu computador.
         open( "diretorio/ideia-sobre-esconder-alface-nas-cadeiras-da-igreja.txt" ) do |ideia|
           puts ideia.read
         end
        </pre>


        Files (arquivos) são *objetos de entrada-e-saída*. Você pode ler e escrever em um arquivo. Em Ruby,
        todo objeto IO (input-output) tem os métodos @read@ e @write@. O método @open@ passa
        um objeto IO para num bloco para você usar. IO é a sua passagem para o mundo exterior. É como
        os raios do sol passando através das barras da prisão. (Entretanto, você não pode escrever (@write@)
        em uma página web usando @OpenURI@. Você terá que achar um ferramenta para copiar para
        o seu Web Server. Um cliente FTP, por exemplo.


        Se alguém quiser ler sua idéia diabólica de esconder alface nas cadeiras da igreja, presumindo
        que você tenha colocado isso numa página web:


        <pre>
         require 'open-uri'
 
         # Abrindo um arquivo disponível num Web Site.
         open( "http://sua.com/ideia-sobre-esconder-alface-nas-cadeiras-da-igreja.txt" ) do |idea|
           puts idea.read
         end
        </pre>


        A biblioteca @OpenURI@ também entende endereços de FTP. Isso amplia as possibilidades de
        onde você pode armazenar arquivos. No seu computador ou em algum outro lugar na Internet.


        h3. Lendo arquivos linha a linha


        Quando você usa @OpenURI@ para obter informações da web com os métodos @open@ and @read@,
        a página é enviada como um @String@. Você também ler a página uma linha de cada vez, se está procurando algo.
        Ou se a página é muito grande e você quer economizar memória do seu computador.


        <pre>
         require 'open-uri'
         open( "http://preeventualist.org/lost/searchfound?q=caminhao" ) do |caminhao|
           caminhao.each_line do |linha|
             puts linha if linha['picape']
           end
         end
        </pre>

        <pre>
         irb> RUBY_VERSION
           => "1.8.6"
        </pre>


        O Ruby estava atualizado. O que mais ele podia fazer? Escanear @constantes@ e @class_variables@ era
        inútil.  A única razão de ter funcionado com a classe @Elevador@ era porque alguém tinha deixado o @irb@
        rodando com suas classes ainda carregadas.


        Ele tinha acabado de carregar este @irb@ e nenhuma classe especial estava disponível. Ele tinha que
        encontrar algumas classes. Ele começou carregando o arquivo @`rbconfig`@ para ter uma idéia de quais
        eram as configurações do Ruby.


        <pre>
         irb> require 'rbconfig'
           => true
         irb> Config::CONFIG
           => {"abs_srcdir"=>"$(ac_abs_srcdir)", "sitedir"=>"bay://Ruby/lib/site_ruby", ... }
        </pre>


        Lá havia muita informação para se analisar. A constante @Config::CONFIG@ é um Hash que
        contém cada configuração do ambiente usada para ajustar o Ruby.  Você pode encontrar o nome
        do sistema operacional em @Config::CONFIG['host_os']@.  O diretório onde as bibliotecas
        principais do Ruby são armazenadas pode ser encontrado em @Config::CONFIG['rubylibdir']@.
        Os programas Ruby podem armazenar arquivos auxiliares em @Config::CONFIG['datadir']@.


        De qualquer maneira, O que Dr. Cham realmente precisava era uma lista de todas as bibliotecas
        que não eram bibliotecas principais do Ruby.  Bibliotecas que foram instaladas pelos Originais
        ou quem quer que tenha manejado este console.  Ele checou algumas variáveis globais por esta
        informação.


        <pre>
         irb> $"
           => ["irb.rb", "e2mmap.rb", "irb/init.rb", ... "rbconfig.rb"]
         irb> $:
           => ["bay://Ruby/lib/site_ruby/1.9", "bay://Ruby/lib/site_ruby/1.9/i686-unknown",
               "bay://Ruby/lib/site_ruby", "compartimento://Ruby/lib/1.9", 
               "bay://Ruby/lib/1.9/i686-unknown", "."]
        </pre>


        Aha, ótimo. Dr. Cham coçou sua barba e olhou para sua sessão o @irb@. A variável global @$"@
        contém um Array de cada biblioteca que foi carregada com @require@.  A maioria destas bibliotecas
        foram carregadas pelo @irb@.  Embora ele havia carregado @'rbconfig.rb'@ a pouco.


        A variável global @$:@, que pode também ser acessada como @LOAD_PATH@, contém uma lista com
        todos os diretórios em que Ruby irá checar quando você tentar carregar um arquivo com @require@.
        Quando Dr. Cham rodou @require 'rbconfig'@, Ruby verificou nesta ordem cada um dos diretórios.


        <pre>
         bay://Ruby/lib/site_ruby/1.9/rbconfig.rb
         bay://Ruby/lib/site_ruby/1.9/i686-unknown/rbconfig.rb (*)
         bay://Ruby/lib/site_ruby/rbconfig.rb
         bay://Ruby/lib/1.9/rbconfig.rb
         bay://Ruby/lib/1.9/i686-unknown/rbconfig.rb
         ./rbconfig.rb
        </pre>


        O segundo caminho era onde o Ruby acabaria por encontrar o arquivo rbconfig.rb.  Dr. Cham supôs
        que os primeiros cinco caminhos eram *caminhos absolutos*.  Estes eram caminhos para diretórios
        num disco chamado @compartimento@.  Caminhos absolutos podem variar em seu sistema.  No Windows,
        caminhos absolutos começam com a letra do disco.  No Linux, caminhos absolutos começam com uma barra.


        O diretório @"."@ indicava um *caminho absoluto*;  O ponto solitário representa o diretório de
        trabalho atual.  O diretório onde Dr. Cham inicialixou o @irb@.  Então, depois de Ruby ter
        procurado em todos locais padrão, ele checou o diretório atual.



        A cabra deu uma espiada com sua cabeça ao redor de Dr. Cham e asistia todas estas instruções
        exalarem, a medida que ele lambia seus lábios para manter suas salivações longe dos monitores
        e dos brilhosos botões. Ele havia soltado alguns regozijos (nas linhas de: _Não, isso não_
        ou _Sim, sim, isso mesmo_ ou _Ok, bem, você escolhe_), mas agora ele estava completamente
        envolto, recomendando código, "Tente @require 'setup'@ ou, não, tente @3 * 5@. Tenha
        certeza que a matemática básica funciona."


        "Claro que a matemática funciona," disse Dr. Cham.  "Deixe comigo, eu preciso encontrar algumas
        classes úteis."


        "É im simples teste de sanidade," disse a cabra. "Apenas tente. Faça @3 * 5@ e veja
        o que aparece."


        Dr. Cham cedeu.


        <pre>
         irb> 3 * 5
           => 15
        </pre>


        "Ok, muito bom! Estamos dentro!" a cabra chacoalhou alegremente sua cara peluda.


        Dr. Cham deu um tapinha na cabeça, "Ótimo.  Agora podemos continuar."


        <pre>
         irb> Dir.chdir( "bay://Ruby/lib/site_ruby/1.9/" )
           => 0
         irb> Dir["./*.{rb}"]
           => ['endertromb.rb', 'leitormental.rb', 'fazedorpedidos.rb']
        </pre>


        Dr. Cham tinha usado @chdir@ para mudar o diretório atual de trabalho para o primeiro
        caminho listado no @LOAD_PATH@.  Este primeiro caminho em @site_ruby@ é um lugar comum
        para armazernar classes personalizadas.


        Aqui estavam as três classes lendárias que o instrutor de órgão da minha filha havia anotado
        para mim anteriormente neste capítulo.  E, Dr. Cham, tendo lido o dito capítulo, reconheceu
        estas três peças do sistema imediatamente.


        A classe @Endertromb@. qie continha os mistérios dos poderes deste planeta.  A classe @LeitorMental@
        que, escaneando as mentes de seus habitantes, lia o conteúdo de cada mente. E, finalmente, a classe
        crucial @FazedorPedidos@ que permitia a realização de desejos de dez letras, caso o desejo alguma
        vez encontrasse um caminho para o núcleo de Endertromb.


        "O que você acha de @4 * 56 + 9@?" perguntou a cabra.  "Não sabemos se isso pode fazer expressões 
        compostas."


        "Eu tenho o @LeitorMental@ bem aqui," disse Dr. Cham.  "E eu tenho o @FazedorPedidos@ bem aqui do lado
        dele.  Este planeta pode ler mentes.  E este planeta pode fazer pedidos.  Agora, vamos ver se ele pode
        fazer ambos ao mesmo tempo."



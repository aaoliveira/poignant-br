    - Eles Que Viveram o Sonho: >

        Apesar da arte dos Originais ter desaparecido há muito, Dr. Cham  trabalhou freneticamente no
        computador acoplado ao painel de controle sobre o convés de observação.  Hannah havia desaparecido
        dentro do chão (ou talvez aquelas pequenas faíscas ao longo do caminho eram ainda rastros de sua
        presença paranormal!) e a cabra amigavelmente assistiu Dr. Cham hackear um módulo Ruby.


        <pre>
         require 'endertromb'
         module EscanerPedidos
           def escanear_por_um_pedido
             desejo = self.read.detect do |pensamento|
               pensamento.index( 'pedido: ' ) == 0
             end
             desejo.gsub( 'pedido: ', '' )
           end
         end
        </pre>


        "Qual seu plano?" perguntou a cabra.  "Parece que eu poderia resolver este problema em
        umas três linhas."


        "Este @Módulo@ é a nova tecnologia de @EscanerPedidos@," disse ele.  "O escâner só pega
        um desejo se ele começa com a palavra @pedido@, um dois pontos e um espaço. Deste modo o planeta não
        será preenchido com cada palavra com menos-de-dez-letras que aparecem na cabeça das pessoas."


        "`Por que você simplesmente não usa uma classe?" indagou a cabra.


        "Porque um @Módulo@ é mais simples que uma classe.  É apenas um aparato de armazenamento
        para métodos.  Ele mantém um grupo de módulos juntos.  Você não pode criar novos objetos
        a partir de um método."


        "Mas você não vai querer um objeto @EscanerPedidos@, para que você possa realmente
        usá-lo?" disse a cabra, chocada.


        "Eu vou mesclá-lo com o @LeitorMental@," disse Dr. Cham.  E assim o fez.


        <pre>
         require 'leitormental'
         class LeitorMental
           include EscanerPedidos
         end
        </pre>


        "Agora, o módulo @EscanerPedidos@ está mesclado ao @LeitorMental@," disse Dr. Cham.
        "Posso chamar o método @escanear_por_um_pedido@ em qualquer objeto @LeitorMental@."


        "Então, é um mixin," disse a cabra.  "O mixin @LeitorMental@."


        "Sim, qualquer módulo que é incluso numa classe com um @include@ é um mixin para esta
        classe.  Se você voltar e olhar para o método @escanear_por_um_pedido@, verá que ele
        chama um método @self.read@.  Eu apenas tenho que ter certeza de que, qualquer que seja a classe com que estou mesclando
        o @LeitorMental@, ela tenha um método @read@.  Caso contrário, ocorrerá um erro."


        "Isto parece bastante estranho, o fato do mixin precisar de certos métodos que ele já não tem.
        Parece que ele deveria funcionar por ele mesmo."


        Dr. Cham moveu seus olhos do teclado para a cabra.  "Bem, é como sua coleção de vídeos.
        Nenhuma das suas fitas de vídeo funciona ao menos que você as ponha numa máquina que use fitas de vídeo.
        Eles dependem um do outro. Um mixin tem alguns requisitos básicos, mas uma vez que uma classe atinje
        estes requisitos, você pode adicionar toda esta funcionalidade extra a ela."


        "Hey, isso é legal," disse a cabra.


        "Você leu o livro trinta vezes e não pegou isso?" perguntou Dr. Cham.


        "Você é bem melhor professor pessoalmente," disse a cabra.  "Eu não pensei que fosse gostar
        tanto assim de você."


        "Eu compreendo completamente," disse o Doutor.  "Isto é muito mais real do que as tirinhas
        fazem sê-lo."


        <pre>
         require 'fazedorpedidos'
         leitor = LeitorMental.new
         pedidor = FazedorPedidos.new
         loop do
           pedido = leitor.escanear_por_um_pedido
           if pedido
             pedidor.realize(pedido)
           end
         end
        </pre>



        Irb sentou e rodou o laço na tela.  Ele fará isso até que você pressione Control-C.  Mas Dr. Cham o deixou
        rodando.  Rodando o laço indefinidamente, escaneando as ondas mentais por um pedido adequado.


        E Dr. Cham terminou seu pedido.  No começo, ele pensou imediatamente em um @garanhão@.  Para cavalgar em pêlo
        sobre os vales de Sedna.  Mas ele recuou com o pensamento, seu pedido não havia sido formado corretamente.
        Um garanhão era inútil para perseguir Os Originais, então ele fechou seus olhos novamente, mordeu seu lábio
        e pensou com si mesmo: @pedido: baleia@.


        h3. Última Baleia para Peoplemud


        A atarracada e mal humorada baleia apareceu na entrada do castelo, onde Hannah estava
        chacoalhando um botão de rosas com sua mão.  Ela golpeou  a Baleia com a mão, mas esta apenas 
        permaneceu perfeita, confortável e firme contra o céu sólido e azul de Endertromb.


        "Estou entediada," disse ela a baleia.  *BOHR-BOHR-OHRRRRRR.*


        "Ok," disse a baleia, profundamente e suavemente.  Enquanto a palavra deslizava junto de sua pesada 
        língua, suas bordas dividiam-se e a palavra saia polida e vestida numa bolha pelo canto de sua boca.


        "Eu sempre tenho que morrer," disse a jovem fantasma.  "As pessoas sempre me matam."


        A baleia sacudiu suas curtas nadadeiras, que se encontravam a uma distância inútil do solo.
        Então, ela se moveu com esforço em direção a menina com sua cauda.  Lançando-se sobre os pedaços de grama.


        "As pessoas matam, então, quem elas matam?" disse a menina.  "Eu.  Elas me matam todas as vezes."


        A baleia conseguiu chegar a três metros da garota onde se erguia como um
        grande monumento de guerra que representava um número suficiente de soldados mortos a ponto de trazer um 
        ruidoso passo até você. E agora a baleia descansava sua cauda e, exausta pela escalada até então,
        deixou suas pálpebras se cerrarem tornando-se uma levemente inchada montanha de barro. Sua farta sombra
        dobrou-se em volta da quase imperceptível Hannah.



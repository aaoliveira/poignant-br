

        E esta é a realidade de andar no trânsito intermunicipal em Wixl. É terrivelmente competitivo. O ônibus
        da manhã é tão cheio que a maioria dos animais de colarinho branco conseguem sapos para guardar seus lugares durante o período da noite.
        Por qualquer razão, isto funciona. Se tornou mercadoria do fluxo de trabalho de sua economia.


        Se você consegue reunir um pouco de imaginação, pode ver um *sinal de percentagem* como um rosto inclinado de um sapo.
        Visualizou a figura em sua cabeça? Agora deixe-me mostrar os sapos que acampam em strings.


        <pre>
         # O formato %s serve para posicionar strings cheias.
         irb> "Assentos são ocupados por %s e %s." % ['um sapo', 'um sapo com dentes']
           => "Assentos são ocupados por um sapo e um sapo com dentes."

         # O %d formato serve para colocar números, enquanto o formato %f serve para
         # floats (números decimais).
         irb> sapos = [44, 162.30]
         irb> imediatamente = "Os sapos preencheram %d assentos e pagaram %f cristais azuis."
         irb> imediatamente % sapos
           => "Os sapos preencheram 44 assentos e pagaram 162.30 cristais azuis."

         # A formatação é flexível com tipos, você pode transmitir em strings
         # e formatá-los como números.
         irb> sapos = ['44', '162.30']
         irb> imediatamente % sapos
           => "Os sapos preencheram 44 assentos e pagaram 162.30 cristais azuis."
        </pre>


        O que você está vendo acima usa o método @%@ nas classes @String@.
        Este método pega *um string* e *um array* e mastiga-os para criar
        uma nova string.  Os itens da lista são puxados (em ordem) e
        colocados em seus lugares reservados. É o começo de um dia de negócios
        e os sapos já fizeram seu trabalho.


        <pre>
         # Observe, aqui está o método String#% chamado como os outros métodos.
         irb> "Mexa-se por favor, %s.".%( 'sapo desdentado' )
           => "Mexa-se por favor, sapo desdentado"

         # Agora vamos chamar da maneira mais bonita, com o sinal de porcentagem
         # entre o string e o array.
         irb> "Aqui está sua frase 1098 para o ano, %s." % ['sapo com dentes']
           => "Aqui está sua frase 1098 para o ano, sapo com dentes."
        </pre>


        Isto também está disponível como o método @Kernel::format@ ou o método @Kernel::sprintf@
        (Na linguagem C, tem um método @sprintf@ que opera assim.)


        <pre>
         irb> format "Sapos são empilhados %d de profundidade e viajam a %d mph.", [5, 56]
           => "Sapos são empilhados 5 de profundidade e viajam a 56 mph."
        </pre>


        Para a maioria das partes, você precisará somente @%s@ (strings), @%d@ (números inteiros)
        ou @%f@ (números float) especificadores de formato.  O símbolo @%p@ irá 
        executar @inspect@ num objeto.


        Sim, então, o formato sapo é realmente útil para construir strings que são
        montados por diferentes tipos de dados.  Você pode aprender todos os vários tipos
        de especificadores de formatos lendo a pagina @ri sprintf@.  Só te darei
        alguns rápidos indicadores.


        Vamos dizer que você tem um array mas quer que os itens apareçam em uma
        *ordem diferente* na string.  Numa situação como esta, você pode identificar
        itens específicos (colocando @1$@ para o primeiro item, @2$@ para o segundo,
        e assim por diante) depois do sinal de porcentagem.


        <pre>
         irb> "Este ônibus tem mais %1$d paradas antes das %2$d horas.  Isto são mais %1$d paradas." % [16, 8]
           => "Este ônibus tem mais 16 paradas antes das 8 horas.  Isto são mais 16 paradas."
        </pre>


        A segunda dica que tenho para você é que pode destinar um certo número de caracteres
        para cada item, uma largura. E se um item é menor que a largura, espaços extras
        serão usados antes do item.  Para preenchê-lo.
        Se a largura é um número negativo, o item será forçado para esquerda e o
        preenchimento virá depois dele.


        <pre>
         # Dê a um item 30 caracteres de largura
         irb> "Na traseira do ônibus: %30s." % ['sapos']
           => "Na traseira do ônibus:                          sapos."

         # Dê a um item justificado a esquerda 30 caracteres de largura
         irb> "Na parte da frente do ônibus: %-30s." % ['sapos']
           => "Na parte da frente do ônibus: sapos                         ."
        </pre>


        Raposinho continuou olhando para o motorista do ônibus.  Lembre-se, ele não entraria no ônibus!


        "Qual o problema?" disse Raposão.  "Você não pode entrar e ficamos no corredor?"


        "Você realmente quer entrar neste ônibus?  Aquele motorista não tem mãos," disse Raposinho, falando perto
        de maneira a aquietar Raposão, "e tudo o que ele tem, ao invés de mãos, são copos com canudos."


